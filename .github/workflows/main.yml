on: [workflow_dispatch, push]
name: qfin_deployment

jobs:
    build-frontend:
      runs-on: ubuntu-latest
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY_URL }}
          username: ${{ secrets.PRIVATE_REGISTRY_USER }}
          password: ${{ secrets.PRIVATE_REGISTRY_PASS }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./qfin-frontend/
          file: ./qfin-frontend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: '${{ secrets.PRIVATE_REGISTRY_URL }}/qfin-frontend:latest'
    build-backend:
      runs-on: ubuntu-latest
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY_URL }}
          username: ${{ secrets.PRIVATE_REGISTRY_USER }}
          password: ${{ secrets.PRIVATE_REGISTRY_PASS }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./qfin-backend/
          file: ./qfin-backend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: '${{ secrets.PRIVATE_REGISTRY_URL }}/qfin-backend:latest'
          cache-from: type=registry,ref=registry.timschlegel.com/qfin-backend:latest
          cache-to: type=registry,registry.timschlegel.com/qfin-backend:latest,mode=max
    deployment:
      runs-on: ubuntu-latest
      needs:
      - build-backend
      - build-frontend
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4
      - name: Apply to Kubernetes-Cluster
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f deployment.yaml
      - name: Rollout Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment/qfin-frontend deployment/qfin-backend -n qfin